version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"

  hdfs-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-namenode
    environment:
      CORE_CONF_fs_defaultFS: hdfs://hdfs-namenode:9000
      CLUSTER_NAME: realtime-hadoop-cluster
      DFS_NAMESERVICES: realtime-hadoop-cluster
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hdfs_namenode_data:/hadoop/dfs/name
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  hdfs-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:9000
    depends_on:
      - hdfs-namenode
    ports:
      - "9864:9864"
    volumes:
      - hdfs_datanode_data:/hadoop/dfs/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  druid-coordinator:
    image: apache/druid:31.0.0
    container_name: druid-coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on:
      - zookeeper
      - druid-metadata-db
    ports:
      - "8082:8082"
    command:
      - coordinator
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    env_file:
      - druid-environment

  druid-broker:
    image: apache/druid:31.0.0
    container_name: druid-broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on:
      - zookeeper
      - druid-metadata-db
      - druid-coordinator
    ports:
      - "8092:8092"
    command:
      - broker
    env_file:
      - druid-environment
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  druid-historical:
    image: apache/druid:31.0.0
    container_name: druid-historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - druid-metadata-db
      - druid-coordinator
    ports:
      - "8091:8091"
    command:
      - historical
    env_file:
      - druid-environment
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  druid-middlemanager:
    image: apache/druid:31.0.0
    container_name: druid-middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - druid-metadata-db
      - druid-coordinator
    ports:
      - "8093:8093"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - druid-environment
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  druid-router:
    image: apache/druid:31.0.0
    container_name: druid-router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - druid-metadata-db
      - druid-coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - druid-environment
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  druid-overlord:
    image: apache/druid:31.0.0
    container_name: druid-overlord
    depends_on:
      - zookeeper
      - druid-metadata-db
      - druid-coordinator
    command:
      - overlord
    env_file:
      - druid-environment
    ports:
      - "8090:8090"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  druid-metadata-db:
    image: postgres:latest
    container_name: druid-metadata-db
    environment:
      POSTGRES_USER: druid_user
      POSTGRES_PASSWORD: druid_password
      POSTGRES_DB: druid
    ports:
      - "5432:5432"
    volumes:
      - druid_metadata_data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      SPARK_MODE: master

  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      SPARK_MASTER: spark://spark-master:7077

volumes:
  hdfs-data:
  druid_metadata_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: F:/DissertationLab/realtime-analytics-debezium-cdc/docker-data/druid-metadata
  hdfs_namenode_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: F:/DissertationLab/realtime-analytics-debezium-cdc/docker-data/hdfs-namenode
  hdfs_datanode_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: F:/DissertationLab/realtime-analytics-debezium-cdc/docker-data/hdfs-datanode
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}